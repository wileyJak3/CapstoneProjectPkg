{"ast":null,"code":"var _jsxFileName = \"/Users/wjackson28/Desktop/School/Per_Scholas/cassini/mod3/project/capstoneProject/testapp/src/components/ItemCard.js\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport Card from \"react-bootstrap/Card\";\nimport ApiContext from \"./contexts/ApiContext\";\nimport axios from \"axios\";\nimport { precartObj } from './objects/precartItems';\n\nfunction ItemCard({\n  getCart\n}) {\n  //! ─── States ──────────────────────────────────────────────────────────────────\n  const [nameOfCartItem, setNameOfCartItem] = useState(\"\");\n  const [priceOfCartItem, setPriceOfCartItem] = useState(\"\");\n  const [cartObject, setCartObject] = useState({\n    cartName: \"\",\n    cartOwner: \"\"\n  });\n  const [cart, setCart] = useState(null); //! ─── Context ──────────────────────────────────────────────────────────────────\n\n  const apiContextData = useContext(ApiContext); //! ─── Variables ──────────────────────────────────────────────────────────────────\n\n  let precartObj = precartObj;\n  let cartItems = apiContextData[0].cartData;\n  console.log(cartItems);\n  useEffect(() => {\n    getCart();\n  }, []);\n\n  async function postPhone(e) {\n    e.preventDefault();\n\n    try {\n      // nameOfPhone ? firstPhone() : 'Loading...';\n      cartObject.cartName = nameOfCartItem;\n      cartObject.cartOwner = priceOfCartItem;\n      const res = await axios.post(\"http://localhost:8281/cart\", cartObject);\n      console.log(res.data);\n      const secondRes = await axios.get(\"http://localhost:8281/cart\");\n      setCart(secondRes.data);\n      getCart(); //! Added this to see if refreshes\n    } catch (e) {\n      console.error(e, e.message);\n    }\n  }\n\n  function printPrecart(precartObj) {\n    return cartItems.map(cartItem => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      border: \"info\",\n      style: {\n        background: \"black\",\n        color: \"red\",\n        width: \"18rem\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(Card.Img, {\n      src: \"holder.js/100px270\",\n      alt: \"Card image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, precartObj.precartName), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }, precartObj.precartP), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: e => postPhone(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, \"Add to Item\"), /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, \"Some quick example text to build on the card title and make up the bulk of the card's content.\")))));\n  }\n\n  function printItems() {\n    return cartItems.map(cartItem => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      border: \"info\",\n      style: {\n        background: \"black\",\n        color: \"red\",\n        width: \"18rem\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(Card.Img, {\n      src: \"holder.js/100px270\",\n      alt: \"Card image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, cartItem.cartName), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }, cartItem.cartId), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: e => postPhone(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, \"Add to Item\"), /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, \"Some quick example text to build on the card title and make up the bulk of the card's content.\")))));\n  } // <button id={ idParam} onClick={ (e) => delElement(e.target.id) }>Remove Item</button>\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, printItems());\n}\n\nexport default ItemCard;","map":{"version":3,"sources":["/Users/wjackson28/Desktop/School/Per_Scholas/cassini/mod3/project/capstoneProject/testapp/src/components/ItemCard.js"],"names":["React","useEffect","useState","useContext","Card","ApiContext","axios","precartObj","ItemCard","getCart","nameOfCartItem","setNameOfCartItem","priceOfCartItem","setPriceOfCartItem","cartObject","setCartObject","cartName","cartOwner","cart","setCart","apiContextData","cartItems","cartData","console","log","postPhone","e","preventDefault","res","post","data","secondRes","get","error","message","printPrecart","map","cartItem","background","color","width","precartName","precartP","printItems","cartId"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext }from 'react';\nimport Card from \"react-bootstrap/Card\";\nimport ApiContext from \"./contexts/ApiContext\";\nimport axios from \"axios\";\nimport {precartObj} from './objects/precartItems'\n\nfunction ItemCard({ getCart }) {\n\n  //! ─── States ──────────────────────────────────────────────────────────────────\n  const [nameOfCartItem, setNameOfCartItem] = useState(\"\");\n  const [priceOfCartItem, setPriceOfCartItem] = useState(\"\");\n  const [cartObject, setCartObject] = useState({ cartName: \"\", cartOwner: \"\" });\n  const [cart, setCart] = useState(null);\n\n  //! ─── Context ──────────────────────────────────────────────────────────────────\n  const apiContextData = useContext(ApiContext);\n\n  //! ─── Variables ──────────────────────────────────────────────────────────────────\n  let precartObj = precartObj;\n\n  let cartItems = apiContextData[0].cartData;\n  console.log(cartItems);\n\n  useEffect(() => {\n    getCart();\n}, [])\n\n  async function postPhone(e) {\n    e.preventDefault();\n    try {\n      // nameOfPhone ? firstPhone() : 'Loading...';\n      cartObject.cartName = nameOfCartItem;\n      cartObject.cartOwner = priceOfCartItem;\n\n      const res = await axios.post(\"http://localhost:8281/cart\", cartObject);\n      console.log(res.data);\n\n      const secondRes = await axios.get(\"http://localhost:8281/cart\");\n      setCart(secondRes.data);\n      getCart(); //! Added this to see if refreshes\n    } catch (e) {\n      console.error(e, e.message);\n    }\n  }\n\n  function printPrecart(precartObj) {\n    return cartItems.map((cartItem) => (\n      <div>\n         <Card\n        border=\"info\"\n        style={{ background: \"black\", color: \"red\", width: \"18rem\" }}\n      >\n        <Card.Img src=\"holder.js/100px270\" alt=\"Card image\" />\n        <Card.Header>{precartObj.precartName}</Card.Header>\n        <Card.Body>\n          <Card.Title>{precartObj.precartP}</Card.Title>\n          <button onClick={(e) => postPhone(e)}>\n            Add to Item\n          </button>\n          <Card.Text>\n            Some quick example text to build on the card title and make up the\n            bulk of the card's content.\n          </Card.Text>\n        </Card.Body>\n      </Card>\n      </div>\n    ));\n  }\n\n  function printItems() {\n    return cartItems.map((cartItem) => (\n      <div>\n         <Card\n        border=\"info\"\n        style={{ background: \"black\", color: \"red\", width: \"18rem\" }}\n      >\n        <Card.Img src=\"holder.js/100px270\" alt=\"Card image\" />\n        <Card.Header>{cartItem.cartName}</Card.Header>\n        <Card.Body>\n          <Card.Title>{cartItem.cartId}</Card.Title>\n          <button onClick={(e) => postPhone(e)}>\n            Add to Item\n          </button>\n          <Card.Text>\n            Some quick example text to build on the card title and make up the\n            bulk of the card's content.\n          </Card.Text>\n        </Card.Body>\n      </Card>\n      </div>\n    ));\n  }\n\n  \n  // <button id={ idParam} onClick={ (e) => delElement(e.target.id) }>Remove Item</button>\n\n  return (\n    <div>\n      {/* <Card\n        border=\"info\"\n        style={{ background: \"black\", color: \"red\", width: \"18rem\" }}\n      >\n        <Card.Img src=\"holder.js/100px270\" alt=\"Card image\" />\n        <Card.Header>{cartItems[0].cartName}</Card.Header>\n        <Card.Body>\n          <Card.Title>{cartItems[0].cartId}</Card.Title>\n         \n          <Card.Text>\n            Some quick example text to build on the card title and make up the\n            bulk of the card's content.\n          </Card.Text>\n        </Card.Body>\n      </Card> */}\n       {/* <button id={cartItem.cartId} onClick={(e) => delElement(e.target.id)}>\n            Remove Item\n          </button> */}\n      {/* {cart ? apiContextData[0].setCartData(cart):null} */}\n      {printItems()}\n    </div>\n  );\n}\n\nexport default ItemCard;\n"]},"metadata":{},"sourceType":"module"}