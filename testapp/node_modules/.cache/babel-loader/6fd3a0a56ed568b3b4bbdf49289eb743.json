{"ast":null,"code":"var _jsxFileName = \"/Users/wjackson28/Desktop/School/Per_Scholas/cassini/mod3/project/capstoneProject/testapp/src/components/ItemCard.js\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport ApiContext from \"./contexts/ApiContext\";\nimport axios from \"axios\";\nimport { precartObj } from \"./objects/precartItems\";\nimport { Col, Row, Container, Button } from \"react-bootstrap\";\n\nfunction ItemCard({\n  getCart\n}) {\n  //! ─── States ──────────────────────────────────────────────────────────────────\n  // const [nameOfCartItem, setNameOfCartItem] = useState(\"\");\n  // const [priceOfCartItem, setPriceOfCartItem] = useState(\"\");\n  const [cartObject, setCartObject] = useState({\n    cartName: \"\",\n    cartPrice: \"\",\n    cartImg: \"\"\n  });\n  const [cart, setCart] = useState(null); //! ─── Context ──────────────────────────────────────────────────────────────────\n\n  const apiContextData = useContext(ApiContext); //! ─── Variables ──────────────────────────────────────────────────────────────────\n\n  let precartArray = precartObj;\n  let cartItems = apiContextData[0].cartData;\n  console.log(cartItems);\n  useEffect(() => {\n    getCart();\n  }, []);\n\n  async function postPhone(e, nameOfCartItem, priceOfCartItem) {\n    e.preventDefault();\n\n    try {\n      // nameOfPhone ? firstPhone() : 'Loading...';\n      cartObject.cartName = nameOfCartItem;\n      cartObject.cartPrice = priceOfCartItem;\n      ca;\n      const res = await axios.post(\"http://localhost:8281/cart\", cartObject);\n      console.log(res.data);\n      const secondRes = await axios.get(\"http://localhost:8281/cart\");\n      setCart(secondRes.data);\n      getCart(); //! Added this to see if refreshes\n    } catch (e) {\n      console.error(e, e.message);\n    }\n  }\n\n  function printPrecart(precartObj) {\n    return precartObj.map(precartItem => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      border: \"info\",\n      style: {\n        background: \"black\",\n        color: \"red\",\n        width: \"18rem\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Card.Img, {\n      src: precartItem.precartImg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, precartItem.precartName), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }\n    }, precartItem.precartPrice), /*#__PURE__*/React.createElement(Button, {\n      style: {\n        background: \"red\",\n        color: \"white\"\n      },\n      onClick: e => postPhone(e, precartItem.precartName, precartItem.precartPrice),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }\n    }, \"Add to Item\"), /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }\n    }, \"Some quick example text to build on the card title and make up the bulk of the card's content.\"))))));\n  }\n\n  function printItems() {\n    return cartItems.map(cartItem => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      border: \"info\",\n      style: {\n        background: \"black\",\n        color: \"red\",\n        width: \"18rem\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card.Img, {\n      src: \"holder.js/100px270\",\n      alt: \"Card image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, cartItem.cartName), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, cartItem.cartId), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: e => postPhone(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, \"Add to Item\"), /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, \"Some quick example text to build on the card title and make up the bulk of the card's content.\")))));\n  } // <button id={ idParam} onClick={ (e) => delElement(e.target.id) }>Remove Item</button>\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, printPrecart(precartArray))));\n}\n\nexport default ItemCard;","map":{"version":3,"sources":["/Users/wjackson28/Desktop/School/Per_Scholas/cassini/mod3/project/capstoneProject/testapp/src/components/ItemCard.js"],"names":["React","useEffect","useState","useContext","Card","ApiContext","axios","precartObj","Col","Row","Container","Button","ItemCard","getCart","cartObject","setCartObject","cartName","cartPrice","cartImg","cart","setCart","apiContextData","precartArray","cartItems","cartData","console","log","postPhone","e","nameOfCartItem","priceOfCartItem","preventDefault","ca","res","post","data","secondRes","get","error","message","printPrecart","map","precartItem","background","color","width","precartImg","precartName","precartPrice","printItems","cartItem","cartId"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport ApiContext from \"./contexts/ApiContext\";\nimport axios from \"axios\";\nimport { precartObj } from \"./objects/precartItems\";\nimport { Col, Row, Container, Button } from \"react-bootstrap\";\n\nfunction ItemCard({ getCart }) {\n  //! ─── States ──────────────────────────────────────────────────────────────────\n  // const [nameOfCartItem, setNameOfCartItem] = useState(\"\");\n  // const [priceOfCartItem, setPriceOfCartItem] = useState(\"\");\n  const [cartObject, setCartObject] = useState({ cartName: \"\", cartPrice: \"\", cartImg:\"\" });\n  const [cart, setCart] = useState(null);\n\n  //! ─── Context ──────────────────────────────────────────────────────────────────\n  const apiContextData = useContext(ApiContext);\n\n  //! ─── Variables ──────────────────────────────────────────────────────────────────\n  let precartArray = precartObj;\n\n  let cartItems = apiContextData[0].cartData;\n  console.log(cartItems);\n\n  useEffect(() => {\n    getCart();\n  }, []);\n\n  async function postPhone(e,nameOfCartItem,priceOfCartItem) {\n    e.preventDefault();\n    try {\n      // nameOfPhone ? firstPhone() : 'Loading...';\n      cartObject.cartName = nameOfCartItem;\n      cartObject.cartPrice = priceOfCartItem;\n      ca\n\n      const res = await axios.post(\"http://localhost:8281/cart\", cartObject);\n      console.log(res.data);\n\n      const secondRes = await axios.get(\"http://localhost:8281/cart\");\n      setCart(secondRes.data);\n      getCart(); //! Added this to see if refreshes\n    } catch (e) {\n      console.error(e, e.message);\n    }\n  }\n\n  function printPrecart(precartObj) {\n    return precartObj.map((precartItem) => (\n      <div>\n        <Col>\n          <Card\n            border=\"info\"\n            style={{ background: \"black\", color: \"red\", width: \"18rem\" }}\n          >\n            <Card.Img src={precartItem.precartImg} />\n            <Card.Header>{precartItem.precartName}</Card.Header>\n            <Card.Body>\n              <Card.Title>{precartItem.precartPrice}</Card.Title>\n              <Button style={{ background: \"red\", color: \"white\" }} onClick={(e) => postPhone(e,precartItem.precartName,precartItem.precartPrice)}>Add to Item</Button>\n              <Card.Text>\n                Some quick example text to build on the card title and make up\n                the bulk of the card's content.\n              </Card.Text>\n            </Card.Body>\n          </Card>\n        </Col>\n      </div>\n    ));\n  }\n\n  function printItems() {\n    return cartItems.map((cartItem) => (\n      <div>\n        <Card\n          border=\"info\"\n          style={{ background: \"black\", color: \"red\", width: \"18rem\" }}\n        >\n          <Card.Img src=\"holder.js/100px270\" alt=\"Card image\" />\n          <Card.Header>{cartItem.cartName}</Card.Header>\n          <Card.Body>\n            <Card.Title>{cartItem.cartId}</Card.Title>\n            <button onClick={(e) => postPhone(e)}>Add to Item</button>\n            <Card.Text>\n              Some quick example text to build on the card title and make up the\n              bulk of the card's content.\n            </Card.Text>\n          </Card.Body>\n        </Card>\n      </div>\n    ));\n  }\n\n  // <button id={ idParam} onClick={ (e) => delElement(e.target.id) }>Remove Item</button>\n\n  return (\n    <div>\n      {/* <Card\n        border=\"info\"\n        style={{ background: \"black\", color: \"red\", width: \"18rem\" }}\n      >\n        <Card.Img src=\"holder.js/100px270\" alt=\"Card image\" />\n        <Card.Header>{cartItems[0].cartName}</Card.Header>\n        <Card.Body>\n          <Card.Title>{cartItems[0].cartId}</Card.Title>\n         \n          <Card.Text>\n            Some quick example text to build on the card title and make up the\n            bulk of the card's content.\n          </Card.Text>\n        </Card.Body>\n      </Card> */}\n      {/* <button id={cartItem.cartId} onClick={(e) => delElement(e.target.id)}>\n            Remove Item\n          </button> */}\n      {/* {cart ? apiContextData[0].setCartData(cart):null} */}\n      {/* {printItems()} */}\n      <Container>\n        <Row>{printPrecart(precartArray)}</Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default ItemCard;\n"]},"metadata":{},"sourceType":"module"}