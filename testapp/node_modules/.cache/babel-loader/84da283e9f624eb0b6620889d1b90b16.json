{"ast":null,"code":"var _jsxFileName = \"/Users/wjackson28/Desktop/School/Per_Scholas/cassini/mod3/project/capstoneProject/testapp/src/components/ItemCard.js\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport ApiContext from \"./contexts/ApiContext\";\nimport axios from \"axios\";\nimport { preInvObj } from \"./objects/preInvItems\";\nimport { Col, Row, Container, Button } from \"react-bootstrap\";\n\nfunction ItemCard({\n  getCart\n}) {\n  //! ─── States ──────────────────────────────────────────────────────────────────\n  // const [nameOfCartItem, setNameOfCartItem] = useState(\"\");\n  // const [priceOfCartItem, setPriceOfCartItem] = useState(\"\");\n  const [cartObject, setCartObject] = useState({\n    cartName: \"\",\n    cartPrice: \"\",\n    cartImg: \"\"\n  });\n  const [inventoryObject, setInventory] = useState({\n    inventoryName: \"\",\n    inventoryImg: \"\",\n    inventoryPrice: \"\"\n  });\n  const [cart, setCart] = useState(null); //! ─── Context ──────────────────────────────────────────────────────────────────\n\n  const apiContextData = useContext(ApiContext); //! ─── Variables ──────────────────────────────────────────────────────────────────\n\n  let preInventoryArray = preInvObj;\n  let inventoryItems = apiContextData[2].inventoryData; // console.error(inventoryItems);\n\n  useEffect(() => {\n    getCart();\n  }, []);\n\n  async function postPhone(e, nameOfCartItem, priceOfCartItem, imgOfCartItem) {\n    e.preventDefault();\n\n    try {\n      // nameOfPhone ? firstPhone() : 'Loading...';\n      cartObject.cartName = nameOfCartItem;\n      cartObject.cartPrice = priceOfCartItem;\n      cartObject.cartImg = imgOfCartItem;\n      inventoryObject.inventoryName = nameOfCartItem;\n      inventoryObject.inventoryImg = imgOfCartItem;\n      inventoryObject.inventoryPrice = priceOfCartItem;\n      const res = await axios.post(\"http://localhost:8281/cart\", cartObject);\n      console.log(res.data);\n      const res2 = await axios.post(\"http://localhost:8281/inventory\", inventoryObject);\n      console.log(res.data);\n      const secondRes = await axios.get(\"http://localhost:8281/cart\");\n      setCart(secondRes.data);\n      getCart(); //! Added this to see if refreshes\n    } catch (e) {\n      console.error(e, e.message);\n    }\n  }\n\n  function printPreInventory(preInvObj) {\n    return preInvObj.map(preInvItem => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      border: \"info\",\n      style: {\n        background: \"black\",\n        color: \"red\",\n        width: \"18rem\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Card.Img, {\n      src: preInvItem.preInvImg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, preInvItem.preInvName), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }\n    }, preInvItem.preInvPrice), /*#__PURE__*/React.createElement(Button, {\n      style: {\n        background: \"red\",\n        color: \"white\"\n      },\n      onClick: e => postPhone(e, preInvItem.preInvName, preInvItem.preInvPrice, preInvItem.preInvImg),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }\n    }, \"Add to Item\"), /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    }, \"Some quick example text to build on the card title and make up the bulk of the card's content.\"))))));\n  }\n\n  function printItems() {\n    return inventoryItems.map(invItem => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      border: \"info\",\n      style: {\n        background: \"black\",\n        color: \"red\",\n        width: \"18rem\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Card.Img, {\n      src: invItem.inventoryImg,\n      alt: \"Card image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, invItem.inventoryName), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 15\n      }\n    }, invItem.inventoryPrice), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: e => postPhone(e, invItem.preInvName, nvItem.preInvPrice, preInvItem.preInvImg),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 15\n      }\n    }, \"Add to Item\"), /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }\n    }, \"Some quick example text to build on the card title and make up the bulk of the card's content.\"))))));\n  } // <button id={ idParam} onClick={ (e) => delElement(e.target.id) }>Remove Item</button>\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }, printPreInventory(preInventoryArray), inventoryItems ? printItems() : \"loading...\")));\n}\n\nexport default ItemCard;","map":{"version":3,"sources":["/Users/wjackson28/Desktop/School/Per_Scholas/cassini/mod3/project/capstoneProject/testapp/src/components/ItemCard.js"],"names":["React","useEffect","useState","useContext","Card","ApiContext","axios","preInvObj","Col","Row","Container","Button","ItemCard","getCart","cartObject","setCartObject","cartName","cartPrice","cartImg","inventoryObject","setInventory","inventoryName","inventoryImg","inventoryPrice","cart","setCart","apiContextData","preInventoryArray","inventoryItems","inventoryData","postPhone","e","nameOfCartItem","priceOfCartItem","imgOfCartItem","preventDefault","res","post","console","log","data","res2","secondRes","get","error","message","printPreInventory","map","preInvItem","background","color","width","preInvImg","preInvName","preInvPrice","printItems","invItem","nvItem"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport ApiContext from \"./contexts/ApiContext\";\nimport axios from \"axios\";\nimport { preInvObj } from \"./objects/preInvItems\";\nimport { Col, Row, Container, Button } from \"react-bootstrap\";\n\nfunction ItemCard({ getCart }) {\n  //! ─── States ──────────────────────────────────────────────────────────────────\n  // const [nameOfCartItem, setNameOfCartItem] = useState(\"\");\n  // const [priceOfCartItem, setPriceOfCartItem] = useState(\"\");\n  const [cartObject, setCartObject] = useState({\n    cartName: \"\",\n    cartPrice: \"\",\n    cartImg: \"\",\n  });\n  const [inventoryObject, setInventory] = useState({\n    inventoryName: \"\",\n    inventoryImg: \"\",\n    inventoryPrice: \"\",\n  });\n  const [cart, setCart] = useState(null);\n\n  //! ─── Context ──────────────────────────────────────────────────────────────────\n  const apiContextData = useContext(ApiContext);\n\n  //! ─── Variables ──────────────────────────────────────────────────────────────────\n  let preInventoryArray = preInvObj;\n\n  let inventoryItems = apiContextData[2].inventoryData;\n  // console.error(inventoryItems);\n\n  useEffect(() => {\n    getCart();\n  }, []);\n\n  async function postPhone(e, nameOfCartItem, priceOfCartItem, imgOfCartItem) {\n    e.preventDefault();\n    try {\n      // nameOfPhone ? firstPhone() : 'Loading...';\n      cartObject.cartName = nameOfCartItem;\n      cartObject.cartPrice = priceOfCartItem;\n      cartObject.cartImg = imgOfCartItem;\n      inventoryObject.inventoryName = nameOfCartItem;\n      inventoryObject.inventoryImg = imgOfCartItem;\n      inventoryObject.inventoryPrice = priceOfCartItem;\n\n      const res = await axios.post(\"http://localhost:8281/cart\", cartObject);\n      console.log(res.data);\n\n      const res2 = await axios.post(\n        \"http://localhost:8281/inventory\",\n        inventoryObject\n      );\n      console.log(res.data);\n\n      const secondRes = await axios.get(\"http://localhost:8281/cart\");\n      setCart(secondRes.data);\n      getCart(); //! Added this to see if refreshes\n    } catch (e) {\n      console.error(e, e.message);\n    }\n  }\n\n  function printPreInventory(preInvObj) {\n    return preInvObj.map((preInvItem) => (\n      <div>\n        <Col>\n          <Card\n            border=\"info\"\n            style={{ background: \"black\", color: \"red\", width: \"18rem\" }}\n          >\n            <Card.Img src={preInvItem.preInvImg} />\n            <Card.Header>{preInvItem.preInvName}</Card.Header>\n            <Card.Body>\n              <Card.Title>{preInvItem.preInvPrice}</Card.Title>\n              <Button\n                style={{ background: \"red\", color: \"white\" }}\n                onClick={(e) =>\n                  postPhone(\n                    e,\n                    preInvItem.preInvName,\n                    preInvItem.preInvPrice,\n                    preInvItem.preInvImg\n                  )\n                }\n              >\n                Add to Item\n              </Button>\n              <Card.Text>\n                Some quick example text to build on the card title and make up\n                the bulk of the card's content.\n              </Card.Text>\n            </Card.Body>\n          </Card>\n        </Col>\n      </div>\n    ));\n  }\n\n  function printItems() {\n    return inventoryItems.map((invItem) => (\n      <div>\n        <Col>\n          <Card\n            border=\"info\"\n            style={{ background: \"black\", color: \"red\", width: \"18rem\" }}\n          >\n            <Card.Img src={invItem.inventoryImg} alt=\"Card image\" />\n            <Card.Header>{invItem.inventoryName}</Card.Header>\n            <Card.Body>\n              <Card.Title>{invItem.inventoryPrice}</Card.Title>\n              <button onClick={(e) => postPhone(\n                    e,\n                    invItem.preInvName,\n                    nvItem.preInvPrice,\n                    preInvItem.preInvImg\n                  )}>Add to Item</button>\n              <Card.Text>\n                Some quick example text to build on the card title and make up\n                the bulk of the card's content.\n              </Card.Text>\n            </Card.Body>\n          </Card>\n        </Col>\n      </div>\n    ));\n  }\n\n  // <button id={ idParam} onClick={ (e) => delElement(e.target.id) }>Remove Item</button>\n\n  return (\n    <div>\n      {/* <Card\n        border=\"info\"\n        style={{ background: \"black\", color: \"red\", width: \"18rem\" }}\n      >\n        <Card.Img src=\"holder.js/100px270\" alt=\"Card image\" />\n        <Card.Header>{cartItems[0].cartName}</Card.Header>\n        <Card.Body>\n          <Card.Title>{cartItems[0].cartId}</Card.Title>\n         \n          <Card.Text>\n            Some quick example text to build on the card title and make up the\n            bulk of the card's content.\n          </Card.Text>\n        </Card.Body>\n      </Card> */}\n      {/* <button id={cartItem.cartId} onClick={(e) => delElement(e.target.id)}>\n            Remove Item\n          </button> */}\n      {/* {cart ? apiContextData[0].setCartData(cart):null} */}\n      {/* {printItems()} */}\n      <Container>\n        <Row>\n          {printPreInventory(preInventoryArray)}\n          {inventoryItems ? printItems() : \"loading...\"}\n        </Row>\n        {/* <Row></Row> */}\n      </Container>\n    </div>\n  );\n}\n\nexport default ItemCard;\n"]},"metadata":{},"sourceType":"module"}