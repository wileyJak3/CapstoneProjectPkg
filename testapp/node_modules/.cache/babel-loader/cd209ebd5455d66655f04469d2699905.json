{"ast":null,"code":"var _jsxFileName = \"/Users/wjackson28/Desktop/School/Per_Scholas/cassini/mod3/project/capstoneProject/testapp/src/components/ItemCard.js\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport ApiContext from \"./contexts/ApiContext\";\nimport axios from \"axios\";\nimport { preInvObj } from \"./objects/preInvItems\";\nimport { Col, Row, Container, Button } from \"react-bootstrap\";\n\nfunction ItemCard({\n  getCart\n}) {\n  //! ─── States ──────────────────────────────────────────────────────────────────\n  // const [nameOfCartItem, setNameOfCartItem] = useState(\"\");\n  // const [priceOfCartItem, setPriceOfCartItem] = useState(\"\");\n  const [cartObject, setCartObject] = useState({\n    cartName: \"\",\n    cartPrice: \"\",\n    cartImg: \"\"\n  });\n  const [inventoryObject, setInventory] = useState({\n    inventoryName: \"\",\n    inventoryImg: \"\",\n    inventoryPrice: \"\"\n  });\n  const [cart, setCart] = useState(null); //! ─── Context ──────────────────────────────────────────────────────────────────\n\n  const apiContextData = useContext(ApiContext); //! ─── Variables ──────────────────────────────────────────────────────────────────\n\n  let preInventoryArray = preInvObj;\n  let inventoryItems = apiContextData[2].inventoryData; // console.error(inventoryItems);\n\n  useEffect(() => {\n    getCart();\n  }, []);\n\n  async function postPhone(e, nameOfCartItem, priceOfCartItem, imgOfCartItem) {\n    e.preventDefault();\n\n    try {\n      // nameOfPhone ? firstPhone() : 'Loading...';\n      cartObject.cartName = nameOfCartItem;\n      cartObject.cartPrice = priceOfCartItem;\n      cartObject.cartImg = imgOfCartItem;\n      inventoryObject.inventoryName = nameOfCartItem;\n      inventoryObject.inventoryImg = imgOfCartItem;\n      inventoryObject.inventoryPrice = priceOfCartItem;\n      const res = await axios.post(\"http://localhost:8281/cart\", cartObject);\n      console.log(res.data);\n      const res2 = await axios.post(\"http://localhost:8281/inventory\", inventoryObject);\n      console.log(res.data);\n      const secondRes = await axios.get(\"http://localhost:8281/cart\");\n      setCart(secondRes.data);\n      getCart(); //! Added this to see if refreshes\n    } catch (e) {\n      console.error(e, e.message);\n    }\n  }\n\n  async function postPhone2(e, nameOfCartItem, priceOfCartItem, imgOfCartItem) {\n    e.preventDefault();\n\n    try {\n      // nameOfPhone ? firstPhone() : 'Loading...';\n      cartObject.cartName = nameOfCartItem;\n      cartObject.cartPrice = priceOfCartItem;\n      cartObject.cartImg = imgOfCartItem;\n      inventoryObject.inventoryName = nameOfCartItem;\n      inventoryObject.inventoryImg = imgOfCartItem;\n      inventoryObject.inventoryPrice = priceOfCartItem;\n      getCart();\n      const res2 = await axios.post(\"http://localhost:8281/cart\", cartObject);\n      const secondRes = await axios.get(\"http://localhost:8281/cart\");\n      setCart(secondRes.data);\n      getCart(); //! Added this to see if refreshes\n    } catch (e) {\n      console.error(e, e.message);\n    }\n  }\n\n  function printPreInventory(preInvObj) {\n    return preInvObj.map(preInvItem => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      border: \"info\",\n      style: {\n        color: \"#0069D9\",\n        width: \"18rem\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Card.Img, {\n      src: preInvItem.preInvImg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, preInvItem.preInvName), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 15\n      }\n    }, \"$\", preInvItem.preInvPrice), /*#__PURE__*/React.createElement(Button, {\n      variant: \"outline-primary\",\n      style: {},\n      onClick: e => postPhone2(e, preInvItem.preInvName, preInvItem.preInvPrice, preInvItem.preInvImg),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 15\n      }\n    }, \"Add to Item\"))))));\n  } // function to print all items available to purchase \n\n\n  function printItems() {\n    return inventoryItems.map(invItem => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      border: \"info\",\n      style: {\n        color: \"#0069D9\",\n        width: \"18rem\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Card.Img, {\n      src: invItem.inventoryImg,\n      alt: \"Card image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }\n    }, invItem.inventoryName), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 15\n      }\n    }, \"$\", invItem.inventoryPrice), /*#__PURE__*/React.createElement(Button, {\n      variant: \"outline-primary\",\n      onClick: e => postPhone2(e, invItem.inventoryName, invItem.inventoryPrice, invItem.inventoryImg),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 15\n      }\n    }, \"Add to Cart\"))))));\n  } // <button id={ idParam} onClick={ (e) => delElement(e.target.id) }>Remove Item</button>\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }\n  }, printPreInventory(preInventoryArray), inventoryItems ? printItems() : \"loading...\")));\n}\n\nexport default ItemCard;","map":{"version":3,"sources":["/Users/wjackson28/Desktop/School/Per_Scholas/cassini/mod3/project/capstoneProject/testapp/src/components/ItemCard.js"],"names":["React","useEffect","useState","useContext","Card","ApiContext","axios","preInvObj","Col","Row","Container","Button","ItemCard","getCart","cartObject","setCartObject","cartName","cartPrice","cartImg","inventoryObject","setInventory","inventoryName","inventoryImg","inventoryPrice","cart","setCart","apiContextData","preInventoryArray","inventoryItems","inventoryData","postPhone","e","nameOfCartItem","priceOfCartItem","imgOfCartItem","preventDefault","res","post","console","log","data","res2","secondRes","get","error","message","postPhone2","printPreInventory","map","preInvItem","color","width","preInvImg","preInvName","preInvPrice","printItems","invItem"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport ApiContext from \"./contexts/ApiContext\";\nimport axios from \"axios\";\nimport { preInvObj } from \"./objects/preInvItems\";\nimport { Col, Row, Container, Button } from \"react-bootstrap\";\n\nfunction ItemCard({ getCart }) {\n  //! ─── States ──────────────────────────────────────────────────────────────────\n  // const [nameOfCartItem, setNameOfCartItem] = useState(\"\");\n  // const [priceOfCartItem, setPriceOfCartItem] = useState(\"\");\n  const [cartObject, setCartObject] = useState({\n    cartName: \"\",\n    cartPrice: \"\",\n    cartImg: \"\",\n  });\n  const [inventoryObject, setInventory] = useState({\n    inventoryName: \"\",\n    inventoryImg: \"\",\n    inventoryPrice: \"\",\n  });\n  const [cart, setCart] = useState(null);\n\n  //! ─── Context ──────────────────────────────────────────────────────────────────\n  const apiContextData = useContext(ApiContext);\n\n  //! ─── Variables ──────────────────────────────────────────────────────────────────\n  let preInventoryArray = preInvObj;\n\n  let inventoryItems = apiContextData[2].inventoryData;\n  // console.error(inventoryItems);\n\n  useEffect(() => {\n    getCart();\n  }, []);\n\n  async function postPhone(e, nameOfCartItem, priceOfCartItem, imgOfCartItem) {\n    e.preventDefault();\n    try {\n      // nameOfPhone ? firstPhone() : 'Loading...';\n      cartObject.cartName = nameOfCartItem;\n      cartObject.cartPrice = priceOfCartItem;\n      cartObject.cartImg = imgOfCartItem;\n      inventoryObject.inventoryName = nameOfCartItem;\n      inventoryObject.inventoryImg = imgOfCartItem;\n      inventoryObject.inventoryPrice = priceOfCartItem;\n\n      const res = await axios.post(\"http://localhost:8281/cart\", cartObject);\n      console.log(res.data);\n\n      const res2 = await axios.post(\n        \"http://localhost:8281/inventory\",\n        inventoryObject\n      );\n      console.log(res.data);\n\n      const secondRes = await axios.get(\"http://localhost:8281/cart\");\n      setCart(secondRes.data);\n      getCart(); //! Added this to see if refreshes\n    } catch (e) {\n      console.error(e, e.message);\n    }\n  }\n\n  \n  async function postPhone2(e, nameOfCartItem, priceOfCartItem, imgOfCartItem) {\n    e.preventDefault();\n    try {\n      // nameOfPhone ? firstPhone() : 'Loading...';\n      cartObject.cartName = nameOfCartItem;\n      cartObject.cartPrice = priceOfCartItem;\n      cartObject.cartImg = imgOfCartItem;\n      inventoryObject.inventoryName = nameOfCartItem;\n      inventoryObject.inventoryImg = imgOfCartItem;\n      inventoryObject.inventoryPrice = priceOfCartItem;\n\n      getCart();\n\n      const res2 = await axios.post(\n        \"http://localhost:8281/cart\",\n        cartObject\n      );\n\n      const secondRes = await axios.get(\"http://localhost:8281/cart\");\n      setCart(secondRes.data);\n      getCart(); //! Added this to see if refreshes\n    } catch (e) {\n      console.error(e, e.message);\n    }\n  }\n\n  function printPreInventory(preInvObj) {\n    return preInvObj.map((preInvItem) => (\n      <div>\n        <Col>\n          <Card\n            border=\"info\"\n            style={{  color: \"#0069D9\", width: \"18rem\" }}\n          >\n            <Card.Img src={preInvItem.preInvImg} />\n            <Card.Header>{preInvItem.preInvName}</Card.Header>\n            <Card.Body>\n              <Card.Title>${preInvItem.preInvPrice}</Card.Title>\n              <Button variant = 'outline-primary'\n                style={{  }}\n                onClick={(e) =>\n                  postPhone2(\n                    e,\n                    preInvItem.preInvName,\n                    preInvItem.preInvPrice,\n                    preInvItem.preInvImg\n                  )\n                }\n              >\n                Add to Item\n              </Button>\n              {/* <Card.Text>\n                Some quick example text to build on the card title and make up\n                the bulk of the card's content.\n              </Card.Text> */}\n            </Card.Body>\n          </Card>\n        </Col>\n      </div>\n    ));\n  }\n\n// function to print all items available to purchase \n\n  function printItems() {\n    return inventoryItems.map((invItem) => (\n      <div>\n        <Col>\n          <Card\n            border=\"info\"\n            style={{  color: \"#0069D9\", width: \"18rem\" }}\n          >\n            <Card.Img src={invItem.inventoryImg} alt=\"Card image\" />\n            <Card.Header>{invItem.inventoryName}</Card.Header>\n            <Card.Body>\n              <Card.Title>${invItem.inventoryPrice}</Card.Title>\n              <Button variant = 'outline-primary'\n              onClick={(e) => postPhone2(\n                    e,\n                    invItem.inventoryName,\n                    invItem.inventoryPrice,\n                    invItem.inventoryImg\n                    \n                  )}>Add to Cart</Button>\n              {/* <Card.Text>\n                Some quick example text to build on the card title and make up\n                the bulk of the card's content.\n              </Card.Text> */}\n            </Card.Body>\n          </Card>\n        </Col>\n      </div>\n    ));\n  }\n\n  // <button id={ idParam} onClick={ (e) => delElement(e.target.id) }>Remove Item</button>\n\n  return (\n    <div>\n      {/* <Card\n        border=\"info\"\n        style={{ background: \"black\", color: \"red\", width: \"18rem\" }}\n      >\n        <Card.Img src=\"holder.js/100px270\" alt=\"Card image\" />\n        <Card.Header>{cartItems[0].cartName}</Card.Header>\n        <Card.Body>\n          <Card.Title>{cartItems[0].cartId}</Card.Title>\n         \n          <Card.Text>\n            Some quick example text to build on the card title and make up the\n            bulk of the card's content.\n          </Card.Text>\n        </Card.Body>\n      </Card> */}\n      {/* <button id={cartItem.cartId} onClick={(e) => delElement(e.target.id)}>\n            Remove Item\n          </button> */}\n      {/* {cart ? apiContextData[0].setCartData(cart):null} */}\n      {/* {printItems()} */}\n      <Container>\n        <Row>\n          {printPreInventory(preInventoryArray)}\n          {inventoryItems ? printItems() : \"loading...\"}\n        </Row>\n        {/* <Row></Row> */}\n      </Container>\n    </div>\n  );\n}\n\nexport default ItemCard;\n"]},"metadata":{},"sourceType":"module"}